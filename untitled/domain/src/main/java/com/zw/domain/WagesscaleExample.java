package com.zw.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WagesscaleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public WagesscaleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andWidIsNull() {
            addCriterion("wid is null");
            return (Criteria) this;
        }

        public Criteria andWidIsNotNull() {
            addCriterion("wid is not null");
            return (Criteria) this;
        }

        public Criteria andWidEqualTo(String value) {
            addCriterion("wid =", value, "wid");
            return (Criteria) this;
        }

        public Criteria andWidNotEqualTo(String value) {
            addCriterion("wid <>", value, "wid");
            return (Criteria) this;
        }

        public Criteria andWidGreaterThan(String value) {
            addCriterion("wid >", value, "wid");
            return (Criteria) this;
        }

        public Criteria andWidGreaterThanOrEqualTo(String value) {
            addCriterion("wid >=", value, "wid");
            return (Criteria) this;
        }

        public Criteria andWidLessThan(String value) {
            addCriterion("wid <", value, "wid");
            return (Criteria) this;
        }

        public Criteria andWidLessThanOrEqualTo(String value) {
            addCriterion("wid <=", value, "wid");
            return (Criteria) this;
        }

        public Criteria andWidLike(String value) {
            addCriterion("wid like", value, "wid");
            return (Criteria) this;
        }

        public Criteria andWidNotLike(String value) {
            addCriterion("wid not like", value, "wid");
            return (Criteria) this;
        }

        public Criteria andWidIn(List<String> values) {
            addCriterion("wid in", values, "wid");
            return (Criteria) this;
        }

        public Criteria andWidNotIn(List<String> values) {
            addCriterion("wid not in", values, "wid");
            return (Criteria) this;
        }

        public Criteria andWidBetween(String value1, String value2) {
            addCriterion("wid between", value1, value2, "wid");
            return (Criteria) this;
        }

        public Criteria andWidNotBetween(String value1, String value2) {
            addCriterion("wid not between", value1, value2, "wid");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIsNull() {
            addCriterion("basicsalary is null");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIsNotNull() {
            addCriterion("basicsalary is not null");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryEqualTo(Integer value) {
            addCriterion("basicsalary =", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotEqualTo(Integer value) {
            addCriterion("basicsalary <>", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryGreaterThan(Integer value) {
            addCriterion("basicsalary >", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("basicsalary >=", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryLessThan(Integer value) {
            addCriterion("basicsalary <", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryLessThanOrEqualTo(Integer value) {
            addCriterion("basicsalary <=", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIn(List<Integer> values) {
            addCriterion("basicsalary in", values, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotIn(List<Integer> values) {
            addCriterion("basicsalary not in", values, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryBetween(Integer value1, Integer value2) {
            addCriterion("basicsalary between", value1, value2, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotBetween(Integer value1, Integer value2) {
            addCriterion("basicsalary not between", value1, value2, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andAllowanceIsNull() {
            addCriterion("allowance is null");
            return (Criteria) this;
        }

        public Criteria andAllowanceIsNotNull() {
            addCriterion("allowance is not null");
            return (Criteria) this;
        }

        public Criteria andAllowanceEqualTo(Integer value) {
            addCriterion("allowance =", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceNotEqualTo(Integer value) {
            addCriterion("allowance <>", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceGreaterThan(Integer value) {
            addCriterion("allowance >", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceGreaterThanOrEqualTo(Integer value) {
            addCriterion("allowance >=", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceLessThan(Integer value) {
            addCriterion("allowance <", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceLessThanOrEqualTo(Integer value) {
            addCriterion("allowance <=", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceIn(List<Integer> values) {
            addCriterion("allowance in", values, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceNotIn(List<Integer> values) {
            addCriterion("allowance not in", values, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceBetween(Integer value1, Integer value2) {
            addCriterion("allowance between", value1, value2, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceNotBetween(Integer value1, Integer value2) {
            addCriterion("allowance not between", value1, value2, "allowance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceIsNull() {
            addCriterion("fullattendance is null");
            return (Criteria) this;
        }

        public Criteria andFullattendanceIsNotNull() {
            addCriterion("fullattendance is not null");
            return (Criteria) this;
        }

        public Criteria andFullattendanceEqualTo(Integer value) {
            addCriterion("fullattendance =", value, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceNotEqualTo(Integer value) {
            addCriterion("fullattendance <>", value, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceGreaterThan(Integer value) {
            addCriterion("fullattendance >", value, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceGreaterThanOrEqualTo(Integer value) {
            addCriterion("fullattendance >=", value, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceLessThan(Integer value) {
            addCriterion("fullattendance <", value, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceLessThanOrEqualTo(Integer value) {
            addCriterion("fullattendance <=", value, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceIn(List<Integer> values) {
            addCriterion("fullattendance in", values, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceNotIn(List<Integer> values) {
            addCriterion("fullattendance not in", values, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceBetween(Integer value1, Integer value2) {
            addCriterion("fullattendance between", value1, value2, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFullattendanceNotBetween(Integer value1, Integer value2) {
            addCriterion("fullattendance not between", value1, value2, "fullattendance");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryIsNull() {
            addCriterion("fixedsalary is null");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryIsNotNull() {
            addCriterion("fixedsalary is not null");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryEqualTo(Integer value) {
            addCriterion("fixedsalary =", value, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryNotEqualTo(Integer value) {
            addCriterion("fixedsalary <>", value, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryGreaterThan(Integer value) {
            addCriterion("fixedsalary >", value, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("fixedsalary >=", value, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryLessThan(Integer value) {
            addCriterion("fixedsalary <", value, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryLessThanOrEqualTo(Integer value) {
            addCriterion("fixedsalary <=", value, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryIn(List<Integer> values) {
            addCriterion("fixedsalary in", values, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryNotIn(List<Integer> values) {
            addCriterion("fixedsalary not in", values, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryBetween(Integer value1, Integer value2) {
            addCriterion("fixedsalary between", value1, value2, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andFixedsalaryNotBetween(Integer value1, Integer value2) {
            addCriterion("fixedsalary not between", value1, value2, "fixedsalary");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createtime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createtime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createtime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createtime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createtime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createtime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wagesscaletable
     *
     * @mbggenerated do_not_delete_during_merge Sun Nov 06 20:27:04 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wagesscaletable
     *
     * @mbggenerated Sun Nov 06 20:27:04 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}