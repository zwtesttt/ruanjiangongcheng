package com.zw.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PayslipExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public PayslipExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEidIsNull() {
            addCriterion("eid is null");
            return (Criteria) this;
        }

        public Criteria andEidIsNotNull() {
            addCriterion("eid is not null");
            return (Criteria) this;
        }

        public Criteria andEidEqualTo(String value) {
            addCriterion("eid =", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotEqualTo(String value) {
            addCriterion("eid <>", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidGreaterThan(String value) {
            addCriterion("eid >", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidGreaterThanOrEqualTo(String value) {
            addCriterion("eid >=", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidLessThan(String value) {
            addCriterion("eid <", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidLessThanOrEqualTo(String value) {
            addCriterion("eid <=", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidLike(String value) {
            addCriterion("eid like", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotLike(String value) {
            addCriterion("eid not like", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidIn(List<String> values) {
            addCriterion("eid in", values, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotIn(List<String> values) {
            addCriterion("eid not in", values, "eid");
            return (Criteria) this;
        }

        public Criteria andEidBetween(String value1, String value2) {
            addCriterion("eid between", value1, value2, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotBetween(String value1, String value2) {
            addCriterion("eid not between", value1, value2, "eid");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIsNull() {
            addCriterion("basicsalary is null");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIsNotNull() {
            addCriterion("basicsalary is not null");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryEqualTo(Integer value) {
            addCriterion("basicsalary =", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotEqualTo(Integer value) {
            addCriterion("basicsalary <>", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryGreaterThan(Integer value) {
            addCriterion("basicsalary >", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("basicsalary >=", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryLessThan(Integer value) {
            addCriterion("basicsalary <", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryLessThanOrEqualTo(Integer value) {
            addCriterion("basicsalary <=", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIn(List<Integer> values) {
            addCriterion("basicsalary in", values, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotIn(List<Integer> values) {
            addCriterion("basicsalary not in", values, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryBetween(Integer value1, Integer value2) {
            addCriterion("basicsalary between", value1, value2, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotBetween(Integer value1, Integer value2) {
            addCriterion("basicsalary not between", value1, value2, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andAllowanceIsNull() {
            addCriterion("allowance is null");
            return (Criteria) this;
        }

        public Criteria andAllowanceIsNotNull() {
            addCriterion("allowance is not null");
            return (Criteria) this;
        }

        public Criteria andAllowanceEqualTo(Integer value) {
            addCriterion("allowance =", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceNotEqualTo(Integer value) {
            addCriterion("allowance <>", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceGreaterThan(Integer value) {
            addCriterion("allowance >", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceGreaterThanOrEqualTo(Integer value) {
            addCriterion("allowance >=", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceLessThan(Integer value) {
            addCriterion("allowance <", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceLessThanOrEqualTo(Integer value) {
            addCriterion("allowance <=", value, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceIn(List<Integer> values) {
            addCriterion("allowance in", values, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceNotIn(List<Integer> values) {
            addCriterion("allowance not in", values, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceBetween(Integer value1, Integer value2) {
            addCriterion("allowance between", value1, value2, "allowance");
            return (Criteria) this;
        }

        public Criteria andAllowanceNotBetween(Integer value1, Integer value2) {
            addCriterion("allowance not between", value1, value2, "allowance");
            return (Criteria) this;
        }

        public Criteria andPerformanceIsNull() {
            addCriterion("performance is null");
            return (Criteria) this;
        }

        public Criteria andPerformanceIsNotNull() {
            addCriterion("performance is not null");
            return (Criteria) this;
        }

        public Criteria andPerformanceEqualTo(Integer value) {
            addCriterion("performance =", value, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceNotEqualTo(Integer value) {
            addCriterion("performance <>", value, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceGreaterThan(Integer value) {
            addCriterion("performance >", value, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceGreaterThanOrEqualTo(Integer value) {
            addCriterion("performance >=", value, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceLessThan(Integer value) {
            addCriterion("performance <", value, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceLessThanOrEqualTo(Integer value) {
            addCriterion("performance <=", value, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceIn(List<Integer> values) {
            addCriterion("performance in", values, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceNotIn(List<Integer> values) {
            addCriterion("performance not in", values, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceBetween(Integer value1, Integer value2) {
            addCriterion("performance between", value1, value2, "performance");
            return (Criteria) this;
        }

        public Criteria andPerformanceNotBetween(Integer value1, Integer value2) {
            addCriterion("performance not between", value1, value2, "performance");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryIsNull() {
            addCriterion("piecesalary is null");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryIsNotNull() {
            addCriterion("piecesalary is not null");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryEqualTo(Integer value) {
            addCriterion("piecesalary =", value, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryNotEqualTo(Integer value) {
            addCriterion("piecesalary <>", value, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryGreaterThan(Integer value) {
            addCriterion("piecesalary >", value, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("piecesalary >=", value, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryLessThan(Integer value) {
            addCriterion("piecesalary <", value, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryLessThanOrEqualTo(Integer value) {
            addCriterion("piecesalary <=", value, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryIn(List<Integer> values) {
            addCriterion("piecesalary in", values, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryNotIn(List<Integer> values) {
            addCriterion("piecesalary not in", values, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryBetween(Integer value1, Integer value2) {
            addCriterion("piecesalary between", value1, value2, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andPiecesalaryNotBetween(Integer value1, Integer value2) {
            addCriterion("piecesalary not between", value1, value2, "piecesalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryIsNull() {
            addCriterion("jobsalary is null");
            return (Criteria) this;
        }

        public Criteria andJobsalaryIsNotNull() {
            addCriterion("jobsalary is not null");
            return (Criteria) this;
        }

        public Criteria andJobsalaryEqualTo(Integer value) {
            addCriterion("jobsalary =", value, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryNotEqualTo(Integer value) {
            addCriterion("jobsalary <>", value, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryGreaterThan(Integer value) {
            addCriterion("jobsalary >", value, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("jobsalary >=", value, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryLessThan(Integer value) {
            addCriterion("jobsalary <", value, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryLessThanOrEqualTo(Integer value) {
            addCriterion("jobsalary <=", value, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryIn(List<Integer> values) {
            addCriterion("jobsalary in", values, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryNotIn(List<Integer> values) {
            addCriterion("jobsalary not in", values, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryBetween(Integer value1, Integer value2) {
            addCriterion("jobsalary between", value1, value2, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andJobsalaryNotBetween(Integer value1, Integer value2) {
            addCriterion("jobsalary not between", value1, value2, "jobsalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryIsNull() {
            addCriterion("overtimesalary is null");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryIsNotNull() {
            addCriterion("overtimesalary is not null");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryEqualTo(Integer value) {
            addCriterion("overtimesalary =", value, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryNotEqualTo(Integer value) {
            addCriterion("overtimesalary <>", value, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryGreaterThan(Integer value) {
            addCriterion("overtimesalary >", value, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("overtimesalary >=", value, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryLessThan(Integer value) {
            addCriterion("overtimesalary <", value, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryLessThanOrEqualTo(Integer value) {
            addCriterion("overtimesalary <=", value, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryIn(List<Integer> values) {
            addCriterion("overtimesalary in", values, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryNotIn(List<Integer> values) {
            addCriterion("overtimesalary not in", values, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryBetween(Integer value1, Integer value2) {
            addCriterion("overtimesalary between", value1, value2, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andOvertimesalaryNotBetween(Integer value1, Integer value2) {
            addCriterion("overtimesalary not between", value1, value2, "overtimesalary");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createtime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createtime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createtime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createtime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createtime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createtime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table paysliptable
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 09 23:51:28 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table paysliptable
     *
     * @mbggenerated Wed Nov 09 23:51:28 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}