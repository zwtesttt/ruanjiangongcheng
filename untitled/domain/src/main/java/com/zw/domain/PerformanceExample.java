package com.zw.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PerformanceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public PerformanceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPidIsNull() {
            addCriterion("pid is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {
            addCriterion("pid is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(String value) {
            addCriterion("pid =", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(String value) {
            addCriterion("pid <>", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(String value) {
            addCriterion("pid >", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(String value) {
            addCriterion("pid >=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThan(String value) {
            addCriterion("pid <", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(String value) {
            addCriterion("pid <=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLike(String value) {
            addCriterion("pid like", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotLike(String value) {
            addCriterion("pid not like", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidIn(List<String> values) {
            addCriterion("pid in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<String> values) {
            addCriterion("pid not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(String value1, String value2) {
            addCriterion("pid between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(String value1, String value2) {
            addCriterion("pid not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andEidIsNull() {
            addCriterion("eid is null");
            return (Criteria) this;
        }

        public Criteria andEidIsNotNull() {
            addCriterion("eid is not null");
            return (Criteria) this;
        }

        public Criteria andEidEqualTo(String value) {
            addCriterion("eid =", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotEqualTo(String value) {
            addCriterion("eid <>", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidGreaterThan(String value) {
            addCriterion("eid >", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidGreaterThanOrEqualTo(String value) {
            addCriterion("eid >=", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidLessThan(String value) {
            addCriterion("eid <", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidLessThanOrEqualTo(String value) {
            addCriterion("eid <=", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidLike(String value) {
            addCriterion("eid like", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotLike(String value) {
            addCriterion("eid not like", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidIn(List<String> values) {
            addCriterion("eid in", values, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotIn(List<String> values) {
            addCriterion("eid not in", values, "eid");
            return (Criteria) this;
        }

        public Criteria andEidBetween(String value1, String value2) {
            addCriterion("eid between", value1, value2, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotBetween(String value1, String value2) {
            addCriterion("eid not between", value1, value2, "eid");
            return (Criteria) this;
        }

        public Criteria andLeavecountIsNull() {
            addCriterion("leavecount is null");
            return (Criteria) this;
        }

        public Criteria andLeavecountIsNotNull() {
            addCriterion("leavecount is not null");
            return (Criteria) this;
        }

        public Criteria andLeavecountEqualTo(Integer value) {
            addCriterion("leavecount =", value, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountNotEqualTo(Integer value) {
            addCriterion("leavecount <>", value, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountGreaterThan(Integer value) {
            addCriterion("leavecount >", value, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountGreaterThanOrEqualTo(Integer value) {
            addCriterion("leavecount >=", value, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountLessThan(Integer value) {
            addCriterion("leavecount <", value, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountLessThanOrEqualTo(Integer value) {
            addCriterion("leavecount <=", value, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountIn(List<Integer> values) {
            addCriterion("leavecount in", values, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountNotIn(List<Integer> values) {
            addCriterion("leavecount not in", values, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountBetween(Integer value1, Integer value2) {
            addCriterion("leavecount between", value1, value2, "leavecount");
            return (Criteria) this;
        }

        public Criteria andLeavecountNotBetween(Integer value1, Integer value2) {
            addCriterion("leavecount not between", value1, value2, "leavecount");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismIsNull() {
            addCriterion("absenteeism is null");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismIsNotNull() {
            addCriterion("absenteeism is not null");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismEqualTo(Integer value) {
            addCriterion("absenteeism =", value, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismNotEqualTo(Integer value) {
            addCriterion("absenteeism <>", value, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismGreaterThan(Integer value) {
            addCriterion("absenteeism >", value, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismGreaterThanOrEqualTo(Integer value) {
            addCriterion("absenteeism >=", value, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismLessThan(Integer value) {
            addCriterion("absenteeism <", value, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismLessThanOrEqualTo(Integer value) {
            addCriterion("absenteeism <=", value, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismIn(List<Integer> values) {
            addCriterion("absenteeism in", values, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismNotIn(List<Integer> values) {
            addCriterion("absenteeism not in", values, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismBetween(Integer value1, Integer value2) {
            addCriterion("absenteeism between", value1, value2, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andAbsenteeismNotBetween(Integer value1, Integer value2) {
            addCriterion("absenteeism not between", value1, value2, "absenteeism");
            return (Criteria) this;
        }

        public Criteria andLatecountIsNull() {
            addCriterion("latecount is null");
            return (Criteria) this;
        }

        public Criteria andLatecountIsNotNull() {
            addCriterion("latecount is not null");
            return (Criteria) this;
        }

        public Criteria andLatecountEqualTo(Integer value) {
            addCriterion("latecount =", value, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountNotEqualTo(Integer value) {
            addCriterion("latecount <>", value, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountGreaterThan(Integer value) {
            addCriterion("latecount >", value, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountGreaterThanOrEqualTo(Integer value) {
            addCriterion("latecount >=", value, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountLessThan(Integer value) {
            addCriterion("latecount <", value, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountLessThanOrEqualTo(Integer value) {
            addCriterion("latecount <=", value, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountIn(List<Integer> values) {
            addCriterion("latecount in", values, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountNotIn(List<Integer> values) {
            addCriterion("latecount not in", values, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountBetween(Integer value1, Integer value2) {
            addCriterion("latecount between", value1, value2, "latecount");
            return (Criteria) this;
        }

        public Criteria andLatecountNotBetween(Integer value1, Integer value2) {
            addCriterion("latecount not between", value1, value2, "latecount");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreIsNull() {
            addCriterion("performanceScore is null");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreIsNotNull() {
            addCriterion("performanceScore is not null");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreEqualTo(Integer value) {
            addCriterion("performanceScore =", value, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreNotEqualTo(Integer value) {
            addCriterion("performanceScore <>", value, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreGreaterThan(Integer value) {
            addCriterion("performanceScore >", value, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("performanceScore >=", value, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreLessThan(Integer value) {
            addCriterion("performanceScore <", value, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreLessThanOrEqualTo(Integer value) {
            addCriterion("performanceScore <=", value, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreIn(List<Integer> values) {
            addCriterion("performanceScore in", values, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreNotIn(List<Integer> values) {
            addCriterion("performanceScore not in", values, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreBetween(Integer value1, Integer value2) {
            addCriterion("performanceScore between", value1, value2, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPerformanceScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("performanceScore not between", value1, value2, "performanceScore");
            return (Criteria) this;
        }

        public Criteria andPieceworkIsNull() {
            addCriterion("piecework is null");
            return (Criteria) this;
        }

        public Criteria andPieceworkIsNotNull() {
            addCriterion("piecework is not null");
            return (Criteria) this;
        }

        public Criteria andPieceworkEqualTo(Integer value) {
            addCriterion("piecework =", value, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkNotEqualTo(Integer value) {
            addCriterion("piecework <>", value, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkGreaterThan(Integer value) {
            addCriterion("piecework >", value, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkGreaterThanOrEqualTo(Integer value) {
            addCriterion("piecework >=", value, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkLessThan(Integer value) {
            addCriterion("piecework <", value, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkLessThanOrEqualTo(Integer value) {
            addCriterion("piecework <=", value, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkIn(List<Integer> values) {
            addCriterion("piecework in", values, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkNotIn(List<Integer> values) {
            addCriterion("piecework not in", values, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkBetween(Integer value1, Integer value2) {
            addCriterion("piecework between", value1, value2, "piecework");
            return (Criteria) this;
        }

        public Criteria andPieceworkNotBetween(Integer value1, Integer value2) {
            addCriterion("piecework not between", value1, value2, "piecework");
            return (Criteria) this;
        }

        public Criteria andAttendanceIsNull() {
            addCriterion("attendance is null");
            return (Criteria) this;
        }

        public Criteria andAttendanceIsNotNull() {
            addCriterion("attendance is not null");
            return (Criteria) this;
        }

        public Criteria andAttendanceEqualTo(Integer value) {
            addCriterion("attendance =", value, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceNotEqualTo(Integer value) {
            addCriterion("attendance <>", value, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceGreaterThan(Integer value) {
            addCriterion("attendance >", value, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceGreaterThanOrEqualTo(Integer value) {
            addCriterion("attendance >=", value, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceLessThan(Integer value) {
            addCriterion("attendance <", value, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceLessThanOrEqualTo(Integer value) {
            addCriterion("attendance <=", value, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceIn(List<Integer> values) {
            addCriterion("attendance in", values, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceNotIn(List<Integer> values) {
            addCriterion("attendance not in", values, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceBetween(Integer value1, Integer value2) {
            addCriterion("attendance between", value1, value2, "attendance");
            return (Criteria) this;
        }

        public Criteria andAttendanceNotBetween(Integer value1, Integer value2) {
            addCriterion("attendance not between", value1, value2, "attendance");
            return (Criteria) this;
        }

        public Criteria andRecordTimeIsNull() {
            addCriterion("recordTime is null");
            return (Criteria) this;
        }

        public Criteria andRecordTimeIsNotNull() {
            addCriterion("recordTime is not null");
            return (Criteria) this;
        }

        public Criteria andRecordTimeEqualTo(Date value) {
            addCriterion("recordTime =", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeNotEqualTo(Date value) {
            addCriterion("recordTime <>", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeGreaterThan(Date value) {
            addCriterion("recordTime >", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("recordTime >=", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeLessThan(Date value) {
            addCriterion("recordTime <", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeLessThanOrEqualTo(Date value) {
            addCriterion("recordTime <=", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeIn(List<Date> values) {
            addCriterion("recordTime in", values, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeNotIn(List<Date> values) {
            addCriterion("recordTime not in", values, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeBetween(Date value1, Date value2) {
            addCriterion("recordTime between", value1, value2, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeNotBetween(Date value1, Date value2) {
            addCriterion("recordTime not between", value1, value2, "recordTime");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceIsNull() {
            addCriterion("fullAttendance is null");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceIsNotNull() {
            addCriterion("fullAttendance is not null");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceEqualTo(Integer value) {
            addCriterion("fullAttendance =", value, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceNotEqualTo(Integer value) {
            addCriterion("fullAttendance <>", value, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceGreaterThan(Integer value) {
            addCriterion("fullAttendance >", value, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceGreaterThanOrEqualTo(Integer value) {
            addCriterion("fullAttendance >=", value, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceLessThan(Integer value) {
            addCriterion("fullAttendance <", value, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceLessThanOrEqualTo(Integer value) {
            addCriterion("fullAttendance <=", value, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceIn(List<Integer> values) {
            addCriterion("fullAttendance in", values, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceNotIn(List<Integer> values) {
            addCriterion("fullAttendance not in", values, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceBetween(Integer value1, Integer value2) {
            addCriterion("fullAttendance between", value1, value2, "fullAttendance");
            return (Criteria) this;
        }

        public Criteria andFullAttendanceNotBetween(Integer value1, Integer value2) {
            addCriterion("fullAttendance not between", value1, value2, "fullAttendance");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table performancetable
     *
     * @mbggenerated do_not_delete_during_merge Sun Nov 06 22:19:31 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table performancetable
     *
     * @mbggenerated Sun Nov 06 22:19:31 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}